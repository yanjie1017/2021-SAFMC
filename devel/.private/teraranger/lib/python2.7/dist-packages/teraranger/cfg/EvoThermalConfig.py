## *********************************************************
##
## File autogenerated for the teraranger package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 246, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [], 'parameters': [{'srcline': 291, 'description': 'Flip Thermal Image horizontally', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'thermal_image_flip_h', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Flip Thermal Image vertically', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'thermal_image_flip_v', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Interpolate Thermal Image', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'thermal_image_interpolate', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Autoscale Thermal Image', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'thermal_image_autoscale', 'edit_method': '', 'default': True, 'level': 1, 'min': False, 'type': 'bool'}, {'srcline': 291, 'description': 'Lower scaling bound', 'max': 1000.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'manual_min_scaling', 'edit_method': '', 'default': -20.0, 'level': 2, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Upper scaling bound', 'max': 1000.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'manual_max_scaling', 'edit_method': '', 'default': -20.0, 'level': 2, 'min': 0.0, 'type': 'double'}, {'srcline': 291, 'description': 'Set the sensor mode', 'max': 4, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'Map', 'edit_method': "{'enum_description': 'Set the colormap for RGB image topic', 'enum': [{'srcline': 15, 'description': 'Set colormap to Dave', 'srcfile': '/home/safmc/catkin_ws/src/teraranger/cfg/EvoThermal.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Dave'}, {'srcline': 16, 'description': 'Set colormap to Ice', 'srcfile': '/home/safmc/catkin_ws/src/teraranger/cfg/EvoThermal.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Ice'}, {'srcline': 17, 'description': 'Set colormap to Ironbow', 'srcfile': '/home/safmc/catkin_ws/src/teraranger/cfg/EvoThermal.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Ironbow'}, {'srcline': 18, 'description': 'Set colormap to High_contrast', 'srcfile': '/home/safmc/catkin_ws/src/teraranger/cfg/EvoThermal.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'High_contrast'}, {'srcline': 19, 'description': 'Set colormap to Whot', 'srcfile': '/home/safmc/catkin_ws/src/teraranger/cfg/EvoThermal.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'Whot'}]}", 'default': 0, 'level': 3, 'min': 0, 'type': 'int'}], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

EvoThermal_Dave = 0
EvoThermal_Ice = 1
EvoThermal_Ironbow = 2
EvoThermal_High_contrast = 3
EvoThermal_Whot = 4
